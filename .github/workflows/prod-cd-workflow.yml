name: "[CD] Prod - Build and Deploy"

run-name: "[CD] Prod - Build and Deploy by ${{ github.actor }}"
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: ${{ vars.NODE_VERSION }}
  REPO_PATH: "."
  ARTIFACT_NAME: "build-${{ github.event.repository.name }}-${{ github.run_id }}"

jobs:
  build-artifact:
    name: "Express Build"
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: "Setup Node.js"
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: "Download dependencies with yarn"
        shell: bash
        run: |
          pushd './${{ env.REPO_PATH }}'
          yarn install

      - name: "Run Build"
        shell: bash
        run: |
          pushd './${{ env.REPO_PATH }}'
          yarn build

      - name: "Remove dev dependencies"
        env:
          NODE_ENV: production
        shell: bash
        run: |
          pushd './${{ env.REPO_PATH }}'
          yarn install --production

      - name: "Zip build artifact"
        shell: bash
        run: |
          pushd './${{ env.REPO_PATH }}'
          zip -r ${{env.ARTIFACT_NAME}}.zip *

      - name: "Upload Artifact of Function App"
        uses: actions/upload-artifact@v4
        with:
          name: ${{env.ARTIFACT_NAME}}
          path: ${{ env.REPO_PATH }}/${{env.ARTIFACT_NAME}}.zip
          if-no-files-found: error

  deploy:
    name: "WebApp Deploy"
    needs: build-artifact
    environment: Production
    runs-on: ubuntu-latest
    steps:
      - name: "Download Artifact"
        uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}

      - name: "Unzip Artifact"
        shell: bash
        run: |
          unzip ${{env.ARTIFACT_NAME}}.zip -d .
          rm ${{env.ARTIFACT_NAME}}.zip

      - name: "Deploy to Azure WebApp"
        uses: azure/webapps-deploy@v2
        with:
          app-name: "pa-creator-forms-api"
          publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
          package: "."
